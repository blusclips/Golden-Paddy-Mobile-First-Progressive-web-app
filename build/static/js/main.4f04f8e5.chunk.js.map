{"version":3,"sources":["redux/app.ts","redux/index.ts","config/firebase.ts","atoms/Container/container.tsx","atoms/Image/image.tsx","config/theme.ts","atoms/Typography/Typography.tsx","config/data.ts","molecules/app_logo_section.tsx","atoms/TextField/text_field.tsx","atoms/Button/primary_button.tsx","molecules/login_form.tsx","serviceWorker.ts","index.tsx","pages/home/index.tsx","pages/login/index.tsx","pages/default/index.tsx"],"names":["TEST_ACTION","initialState","isLoggedIn","rootReducer","combineReducers","appReducer","state","action","payload","data","type","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","children","elevation","width","height","margin","bgColor","classes","makeStyles","root","backgroundColor","marginTop","justifyContent","alignItems","useStyles","Paper","className","source","alt","Avatar","src","COLORS","FONT_SIZE","uppercase","color","title","subtitle","paragraph","size","fontFamily","fontSize","fontWeight","textTransform","Typography","container","text","Grid","justify","item","xs","DATA","direction","label","disabled","value","id","error","errorMessage","onChange","borderColor","input","borderRadius","borderWidth","paddingLeft","paddingRight","marginBottom","InputLabel","htmlFor","InputBase","inputProps","e","target","block","active","onClick","gradientBackground","background","border","padding","Button","variant","disableElevation","disableRipple","fullWidth","onLogin","password","email","emailError","passwordError","emailErrorMessage","passwordErrorMessage","onEmailTextChange","onPasswordTextChange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","store","Store","exact","path","component","history","useHistory","useEffect","localStorage","getItem","push","onSignOut","a","signOut","clear","useState","setPassword","setEmail","setError","onLoginUser","signInWithEmailAndPassword","user","setItem","uid","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f04f8e5.chunk.js","sourcesContent":["/** @format */\nconst TEST_ACTION = 'cb5609ac-80d7-49e1-bf1f-e62cadf1c6a4';\n\nconst initialState = {\n  isLoggedIn: false,\n};\n\nexport default function appReducer(state = initialState, action: any) {\n  const payload = action.data;\n  switch (action.type) {\n    case TEST_ACTION:\n      return {\n        ...state,\n        isLoggedIn: payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const appTestAction = (data: boolean) => {\n  return { type: TEST_ACTION, data };\n};\n","/** @format */\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport appReducer from './app';\n\nconst rootReducer = combineReducers({\n  appReducer,\n});\n\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","/** @format */\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDhpaQux1w_TbXRpz8ruJ8q-xRjkTmv4dc',\n  authDomain: 'goldenpaddy-c98de.firebaseapp.com',\n  databaseURL: 'https://goldenpaddy-c98de.firebaseio.com',\n  projectId: 'goldenpaddy-c98de',\n  storageBucket: 'goldenpaddy-c98de.appspot.com',\n  messagingSenderId: '59332522162',\n  appId: '1:59332522162:web:58c2393a953f2c627559ab',\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface TypographyProps {\n  children: any;\n  border?: boolean;\n  elevation?: number;\n  width?: string;\n  height?: number | string;\n  margin?: number | string;\n  bgColor?: string;\n}\n\nexport default ({\n  children,\n  elevation,\n  width,\n  height,\n  margin,\n  bgColor,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      width: width ? width : 100,\n      height: height ? height : 100,\n      backgroundColor: bgColor,\n      marginTop: margin,\n      justifyContent: 'center',\n      margin: 'auto',\n      alignItems: 'center',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} elevation={elevation ? elevation : 0}>\n      {' '}\n      {children}{' '}\n    </Paper>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface TypographyProps {\n  source?: string;\n  alt: string;\n  width?: number | string;\n  height?: number;\n}\n\nexport default ({ source, alt, width, height }: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      width: width ? width : 100,\n      height: height ? height : 100,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Avatar\n      className={classes.root}\n      alt={alt}\n      src={source ? source : '/logo.png'}\n    />\n  );\n};\n","/** @format */\n\nexport const COLORS = {\n  FONT_TYPE: 'Red Hard Display',\n  PRIMARY_COLOR: '#1D9129',\n  PRIMARY_COLOR_LIGHT: '#2FB53D',\n  PRIMARY_LIGHT_BACKGROUND: '#e7f5e7',\n  SECONDARY_COLOR: '#FECC17',\n  SECONDARY_COLOR_LIGHT: '#FFD744',\n  TERTIARY_COLOR: '#4C4C4C',\n  TERTIARY_COLOR_LIGHT: '#C4C4C4',\n  GRAY_COLOR: '#828282',\n  WHITE_GRAY: '#E0DEDE',\n  WHITE: '#fff',\n};\n\nexport const FONT_SIZE = {\n  TITLE: '',\n  SUBTITLE: '',\n  PARAGRAPH: '',\n  LABEL: '',\n};\n","/** @format */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FONT_SIZE, COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  children: string;\n  uppercase?: boolean;\n  title?: boolean;\n  color?: string;\n  subtitle?: boolean;\n  paragraph?: string;\n  size?: number;\n}\n\nexport default ({\n  children,\n  uppercase,\n  color,\n  title,\n  subtitle,\n  paragraph,\n  size,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      color: color ? color : COLORS.TERTIARY_COLOR,\n      fontFamily: 'Red Hat Display',\n      fontSize: size\n        ? size\n        : title\n        ? FONT_SIZE.TITLE\n        : subtitle\n        ? FONT_SIZE.SUBTITLE\n        : paragraph\n        ? FONT_SIZE.PARAGRAPH\n        : FONT_SIZE.LABEL,\n      fontWeight: title ? 'bold' : 'normal',\n      textTransform: uppercase ? 'uppercase' : 'none',\n      justifyContent: 'center',\n    },\n  });\n  const classes = useStyles();\n  return <Typography className={classes.root}>{children}</Typography>;\n};\n","/** @format */\n\nexport default {\n  APP_NAME: 'Nixon Grocery Store',\n  DESCRIPTION:\n    'Store for all your fresh Vegetables delivered directly to your Door',\n};\n","/** @format */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '../atoms/Container/container';\nimport Image from '../atoms/Image/image';\nimport Typography from '../atoms/Typography/Typography';\nimport DATA from '../config/data';\n\nexport interface AppSectionProps {}\n\nexport default ({}: AppSectionProps) => {\n  const useStyles = makeStyles({\n    container: {\n      justifyContent: 'center',\n    },\n    text: {\n      justifyContent: 'center',\n      height: 50,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Container margin={50} width=\"100%\" height={60}>\n      <Grid\n        justify=\"center\"\n        className={classes.container}\n        container\n        item\n        xs={12}\n      >\n        <Grid xs={3}>\n          <Image alt={DATA.APP_NAME} width={80} height={80} />\n        </Grid>\n        <Grid direction=\"column\" className={classes.text} xs={8}>\n          <Container width=\"100%\" height=\"100%\" margin={20}>\n            <Typography subtitle size={21}>\n              {DATA.APP_NAME}\n            </Typography>\n          </Container>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  label: string;\n  id?: string;\n  type: string;\n  value?: string;\n  disabled?: boolean;\n  error?: boolean;\n  errorMessage?: string;\n  onChange: (text: string) => void;\n}\n\nexport default ({\n  label,\n  disabled,\n  value,\n  id,\n  type,\n  error,\n  errorMessage,\n  onChange,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      borderColor: 'red',\n    },\n    input: {\n      backgroundColor: '#f0f6f1',\n      borderRadius: 5,\n      borderWidth: 50,\n      color: COLORS.TERTIARY_COLOR,\n      paddingLeft: 8,\n      paddingRight: 8,\n      fontSize: '14px',\n      height: 40,\n      fontWeight: 'bold',\n    },\n    label: {\n      color: COLORS.TERTIARY_COLOR_LIGHT,\n      fontFamily: 'Red Hat Display',\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      fontSize: 11,\n      marginBottom: 5,\n    },\n    error: {\n      fontSize: 11,\n      marginTop: 2,\n      fontWeight: 'normal',\n      color: 'red',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <>\n      <InputLabel className={classes.label} htmlFor={id}>\n        {label}\n      </InputLabel>\n      <InputBase\n        id={id}\n        className={classes.input}\n        disabled={disabled}\n        type={type}\n        value={value}\n        inputProps={{ 'aria-label': 'naked' }}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <InputLabel className={classes.error} htmlFor={id}>\n        {error && errorMessage}\n      </InputLabel>\n    </>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  title: string;\n  block?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n  onClick?: () => void;\n}\n\nexport default ({\n  title,\n  block,\n  disabled,\n  active,\n  onClick,\n}: TypographyProps) => {\n  const backgroundColor = active\n    ? COLORS.PRIMARY_COLOR\n    : !disabled\n    ? COLORS.PRIMARY_COLOR_LIGHT\n    : COLORS.WHITE_GRAY;\n  const gradientBackground = `linear-gradient(45deg, ${backgroundColor} 100%,${backgroundColor} 100%)`;\n  const useStyles = makeStyles({\n    root: {\n      background: gradientBackground,\n      borderRadius: 100,\n      border: 0,\n      color: 'white',\n      height: 40,\n      padding: '0 30px',\n    },\n    label: {\n      color: disabled ? COLORS.TERTIARY_COLOR : COLORS.WHITE,\n      textTransform: 'capitalize',\n      fontFamily: 'Red Hat Display',\n      fontWeight: 'bold',\n      fontSize: '16px',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"text\"\n      disabled={disabled}\n      disableElevation\n      disableRipple={true}\n      fullWidth={block}\n      color=\"default\"\n      classes={{\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\n        label: classes.label, // class name, e.g. `classes-nesting-label-x`\n      }}\n      className=\"Button\"\n    >\n      {title}\n    </Button>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '../atoms/TextField/text_field';\nimport Container from '../atoms/Container/container';\nimport LoginButton from '../atoms/Button/primary_button';\nimport Typography from '../atoms/Typography/Typography';\n\nexport interface AppSectionProps {\n  onLogin?: () => void;\n  password: string;\n  passwordError?: boolean;\n  passwordErrorMessage?: string;\n  email: string;\n  emailError?: boolean;\n  emailErrorMessage?: string;\n  onEmailTextChange: (text: string) => void;\n  onPasswordTextChange: (text: string) => void;\n}\n\nexport default ({\n  onLogin,\n  password,\n  email,\n  emailError,\n  passwordError,\n  emailErrorMessage,\n  passwordErrorMessage,\n  onEmailTextChange,\n  onPasswordTextChange,\n}: AppSectionProps) => {\n  const useStyles = makeStyles({\n    container: {\n      justifyContent: 'center',\n    },\n    text: {\n      justifyContent: 'center',\n      height: 50,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Container margin={70} width=\"100%\" height={200}>\n      <Container width=\"100%\" margin={30} height={50}>\n        <Grid\n          justify=\"center\"\n          className={classes.container}\n          container\n          item\n          xs={12}\n        >\n          <Grid xs={3}>\n            <Container width=\"100%\" height=\"100%\" margin={'20%'}>\n              <Typography title> Email: </Typography>\n            </Container>\n          </Grid>\n          <Grid direction=\"column\" className={classes.text} xs={8}>\n            <Container width=\"100%\" height=\"100%\">\n              <Input\n                onChange={onEmailTextChange}\n                label=\"enter name\"\n                value={email}\n                type=\"email\"\n                error={emailError}\n                errorMessage={emailErrorMessage}\n              />\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n      <Container width=\"100%\" margin={50} height={50}>\n        <Grid\n          justify=\"center\"\n          className={classes.container}\n          container\n          item\n          xs={12}\n        >\n          <Grid xs={3}>\n            <Container width=\"100%\" height=\"100%\" margin={'20%'}>\n              <Typography title> Password: </Typography>\n            </Container>\n          </Grid>\n          <Grid direction=\"column\" className={classes.text} xs={8}>\n            <Container width=\"100%\" height=\"100%\">\n              <Input\n                onChange={onPasswordTextChange}\n                label=\"password\"\n                type=\"password\"\n                value={password}\n                error={passwordError}\n                errorMessage={passwordErrorMessage}\n              />\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n      <Container width=\"90%\" margin={80}>\n        <LoginButton onClick={onLogin} active block title=\"login\" />\n      </Container>\n    </Container>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Store from './redux';\nimport './index.css';\nimport HomePage from './pages/home';\nimport LoginPage from './pages/login';\nimport DefaultPage from './pages/default';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route path=\"*\" component={DefaultPage} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../../config/firebase';\n\nexport default () => {\n  let history = useHistory();\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      history.push('/login');\n    }\n  }, [history]);\n\n  const onSignOut = async () => {\n    try {\n      await auth.signOut();\n      history.push('/login');\n      localStorage.clear();\n    } catch (error) {}\n  };\n\n  return (\n    <div>\n      {' '}\n      login <button onClick={onSignOut}> logout </button>{' '}\n    </div>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AppLogoSection from '../../molecules/app_logo_section';\nimport LoginForm from '../../molecules/login_form';\nimport { auth } from '../../config/firebase';\n\nexport default () => {\n  let history = useHistory();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(false);\n\n  const onUsername = (text: string) => {\n    setError(false);\n    setPassword(text);\n  };\n\n  const onEmail = (text: string) => {\n    setError(false);\n    setEmail(text);\n  };\n\n  const onLoginUser = async () => {\n    try {\n      const { user }: any = await auth.signInWithEmailAndPassword(\n        email,\n        password\n      );\n      localStorage.setItem('userId', user.uid);\n      history.push('/');\n    } catch (error) {\n      setError(true);\n      setPassword('');\n    }\n  };\n\n  return (\n    <div>\n      <AppLogoSection />\n      <LoginForm\n        password={password}\n        email={email}\n        onPasswordTextChange={onUsername}\n        onEmailTextChange={onEmail}\n        onLogin={onLoginUser}\n        passwordError={error}\n        passwordErrorMessage=\"Incorrect Email Or Password\"\n      />\n    </div>\n  );\n};\n","/** @format */\n\nimport React from 'react';\n\nexport default () => {\n  return <div> default </div>;\n};\n"],"sourceRoot":""}