{"version":3,"sources":["config/firebase.ts","config/theme.ts","atoms/Icon/icon.tsx","atoms/Typography/Typography.tsx","atoms/Image/image.tsx","molecules/header.tsx","molecules/bottom_nav.tsx","molecules/card_full_width.tsx","atoms/Container/container.tsx","molecules/card_flex.tsx","templates/home.tsx","atoms/Loader/loader.tsx","config/data.ts","molecules/app_logo_section.tsx","atoms/TextField/text_field.tsx","atoms/Button/primary_button.tsx","molecules/login_form.tsx","templates/login.tsx","templates/default.tsx","serviceWorker.ts","index.tsx","pages/home/index.tsx","pages/login/index.tsx","pages/default/index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","COLORS","FONT_SIZE","name","disabled","active","buttonIcon","margin","color","classes","makeStyles","root","fontSize","alignSelf","marginLeft","useStyles","Icon","className","children","uppercase","title","subtitle","paragraph","tab","size","fontFamily","fontWeight","textTransform","justifyContent","Typography","source","alt","width","height","square","borderRadius","Avatar","src","user","avatar","onLogoutOrIn","authenticate","header","top","backgroundColor","borderStyle","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderColor","tabContainer","display","alignItems","flexDirection","Paper","elevation","Grid","justify","container","item","xs","undefined","onClick","position","bottom","description","marginBottom","borderWidth","bgColor","marginTop","textCenter","onLogout","onLogIn","visible","left","type","text","DATA","direction","label","value","id","error","errorMessage","onChange","input","paddingLeft","paddingRight","InputBase","inputProps","e","target","InputLabel","htmlFor","block","gradientBackground","background","border","padding","Button","variant","disableElevation","disableRipple","fullWidth","onLogin","loading","password","email","emailError","passwordError","emailErrorMessage","passwordErrorMessage","onEmailTextChange","onPasswordTextChange","onLoginUser","useState","setPassword","setEmail","setError","useEffect","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","exact","path","component","history","useHistory","setAuthenticate","localStorage","getItem","push","onSignOut","a","signOut","clear","authenticateError","setAuthenticateError","loader","setLoader","signInWithEmailAndPassword","setItem","uid","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9bda5312.chunk.js","sourcesContent":["/** @format */\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n// just added firebase files here. for demo purposes.. actual configs are put in .env files\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDhpaQux1w_TbXRpz8ruJ8q-xRjkTmv4dc',\n  authDomain: 'goldenpaddy-c98de.firebaseapp.com',\n  databaseURL: 'https://goldenpaddy-c98de.firebaseio.com',\n  projectId: 'goldenpaddy-c98de',\n  storageBucket: 'goldenpaddy-c98de.appspot.com',\n  messagingSenderId: '59332522162',\n  appId: '1:59332522162:web:58c2393a953f2c627559ab',\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","/** @format */\n\nexport const COLORS = {\n  FONT_TYPE: 'Red Hard Display',\n  PRIMARY_COLOR: '#1D9129',\n  PRIMARY_COLOR_LIGHT: '#2FB53D',\n  PRIMARY_LIGHT_BACKGROUND: '#e7f5e7',\n  SECONDARY_COLOR: '#FECC17',\n  SECONDARY_COLOR_LIGHT: '#FFD744',\n  TERTIARY_COLOR: '#4C4C4C',\n  TERTIARY_COLOR_LIGHT: '#C4C4C4',\n  GRAY_COLOR: '#828282',\n  WHITE_GRAY: '#E0DEDE',\n  WHITE: '#fff',\n};\n\nexport const FONT_SIZE = {\n  TITLE: '18x',\n  SUBTITLE: '11px',\n  PARAGRAPH: '',\n  LABEL: '11px',\n  TAB: '12px'\n};\n","/** @format */\n\nimport React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../config/theme';\n\nexport interface IconProps {\n  name: string;\n  color?: string;\n  active?: boolean;\n  buttonIcon?: boolean;\n  disabled?: boolean;\n  margin?: number | string;\n}\n\nexport default ({ name, disabled, active, buttonIcon, margin, color }: IconProps) => {\n  const useStyles = makeStyles({\n    root: {\n      fontSize: '20px',\n      alignSelf: 'center',\n      color: color ? color : active\n        ? buttonIcon\n          ? COLORS.WHITE\n          : COLORS.PRIMARY_COLOR\n        : disabled\n        ? COLORS.TERTIARY_COLOR\n        : buttonIcon\n        ? COLORS.WHITE\n        : COLORS.PRIMARY_COLOR_LIGHT,\n      marginLeft: margin,\n    },\n  });\n  const classes = useStyles();\n  return <Icon className={classes.root}> {name} </Icon>;\n};\n","/** @format */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FONT_SIZE, COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  children: string;\n  uppercase?: boolean;\n  title?: boolean;\n  color?: string;\n  subtitle?: boolean;\n  paragraph?: string;\n  tab?: boolean;\n  size?: number| string;\n}\n\nexport default ({\n  children,\n  uppercase,\n  color,\n  title,\n  subtitle,\n  paragraph,\n  tab,\n  size,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      color: color ? color : COLORS.TERTIARY_COLOR,\n      fontFamily: 'Red Hat Display',\n      fontSize: size\n        ? size\n        : title\n        ? FONT_SIZE.TITLE\n        : subtitle\n        ? FONT_SIZE.SUBTITLE\n        : paragraph\n        ? FONT_SIZE.PARAGRAPH\n        : tab ? FONT_SIZE.TAB : FONT_SIZE.LABEL,\n      fontWeight: title || tab  ? 'bold' : 'normal',\n      textTransform: uppercase ? 'uppercase' : 'none',\n      justifyContent: 'center',\n    },\n  });\n  const classes = useStyles();\n  return <Typography className={classes.root}>{children}</Typography>;\n};\n","/** @format */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface TypographyProps {\n  source?: string;\n  alt: string;\n  width?: number | string;\n  height?: number | string;\n  square?: boolean;\n}\n\nexport default ({ source, alt, width, height, square }: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      width: width ? width : 100,\n      height: height ? height : 100,\n      borderRadius: square ? 5 : 100,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Avatar\n      className={classes.root}\n      alt={alt ? alt : 'img'}\n      src={source ? source : '/logo.png'}\n    />\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '../atoms/Icon/icon';\nimport Typography from '../atoms/Typography/Typography';\nimport Image from '../atoms/Image/image';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../config/theme';\n\nexport interface TypographyProps {\n  avatar?: string;\n  user?: string;\n  authenticate?: boolean;\n  onLogoutOrIn?: () => void;\n}\n\nexport default ({\n  user='',\n  avatar,\n  onLogoutOrIn,\n  authenticate,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    header: {\n      height: 65,\n    },\n    root: {\n      width: '100%',\n      height: 55,\n      top: 0,\n      borderRadius: 0,\n      backgroundColor: '#fff',\n      borderStyle: 'solid',\n      borderTopWidth: '0px',\n      borderLeftWidth: '0px',\n      borderRightWidth: '0px',\n      borderBottomWidth: '2px',\n      borderColor: COLORS.PRIMARY_COLOR_LIGHT,\n    },\n    tabContainer: {\n      width: '100%',\n      height: 56,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'row',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <>\n      <Paper elevation={0} className={classes.root}>\n        <Grid\n          justify=\"center\"\n          container\n          item\n          xs={12}\n        >\n          <Grid className={classes.tabContainer} xs={2}>\n            <Image\n              width={35}\n              source={authenticate ? (avatar ? avatar : '/') : undefined}\n              height={35}\n              alt=\"user\"\n            />\n          </Grid>\n          <Grid className={classes.tabContainer} xs={2}>\n            <Typography title>{authenticate ? user : ''}</Typography>\n          </Grid>\n          <Grid className={classes.tabContainer} xs={5}>\n            {authenticate && <Icon name=\"add_shopping_cart\" />}\n          </Grid>\n          <Grid onClick={onLogoutOrIn} className={classes.tabContainer} xs={3}>\n            {'    '}\n            <Typography title>{authenticate ? ' Logout ' : ' Login '}</Typography>\n            <Icon\n              margin={5}\n              name={authenticate ? 'power_settings_new' : 'login'}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '../atoms/Icon/icon';\nimport Typography from '../atoms/Typography/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../config/theme';\n\nexport interface TypographyProps {\n  avatar?: string;\n  user?: string;\n  authenticate?: boolean;\n  onLogoutOrIn?: () => void;\n}\n\nexport default ({\n  user,\n  avatar,\n  onLogoutOrIn,\n  authenticate,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    header: {\n      height: 65,\n    },\n    root: {\n      width: '100%',\n      height: 55,\n      position: 'fixed',\n      bottom: 0,\n      borderRadius: 0,\n      backgroundColor: '#fff',\n      borderStyle: 'solid',\n      borderTopWidth: '1px',\n      borderLeftWidth: '0px',\n      borderRightWidth: '0px',\n      borderBottomWidth: '0px',\n      borderColor: '#cbd7df',\n    },\n    tabContainer: {\n      width: '100%',\n      height: 56,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.header} />\n      <Paper elevation={0} className={classes.root}>\n        <Grid\n          justify=\"center\"\n          container\n          item\n          xs={12}\n        >\n          <Grid className={classes.tabContainer} xs={4}>\n             <Icon active name=\"home\" />\n             <Typography tab color={COLORS.PRIMARY_COLOR}> Home </Typography>\n          </Grid>\n\n          <Grid className={classes.tabContainer} xs={4}>\n        <Icon color={COLORS.TERTIARY_COLOR } name=\"explore\" />\n             <Typography tab> Explore </Typography>\n          </Grid>\n\n          <Grid className={classes.tabContainer} xs={4}>\n        <Icon color={ COLORS.TERTIARY_COLOR } name=\"settings\" />\n            <Typography tab> Settings </Typography>\n          </Grid>\n           \n        </Grid>\n      </Paper>\n    </>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '../atoms/Typography/Typography';\nimport Image from '../atoms/Image/image';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../config/theme';\n\nexport interface Props {\n  title: string;\n  description?: string;\n  source?: string;\n}\n\nexport default ({ title, description='', source }: Props) => {\n  const useStyles = makeStyles({\n    root: {\n      width: '95%',\n      marginLeft: '2.5%',\n      height: 180,\n      backgroundColor: COLORS.WHITE,\n      marginBottom: 5,\n      borderStyle: 'solid',\n      borderWidth: 0.3,\n      borderColor: COLORS.TERTIARY_COLOR_LIGHT,\n    },\n    tabContainer: {\n      width: '100%',\n      height: 180,\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n    },\n    paragraph: {\n      width: '100%',\n      height: 150,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexDirection: 'column',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Grid\n        justify=\"center\"\n        container\n        item\n        xs={12}\n      >\n        <Grid className={classes.tabContainer} xs={4}>\n          <Image\n            source={source ? source : '/'}\n            width={100}\n            height={100}\n            alt=\"item\"\n            square\n          />\n        </Grid>\n        <Grid className={classes.paragraph} xs={8}>\n          <Typography title>{title}</Typography>\n          <Typography size={14}>{description}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport interface TypographyProps {\n  children: any;\n  border?: boolean;\n  elevation?: number;\n  width?: string;\n  height?: number | string;\n  margin?: number | string;\n  bgColor?: string;\n  className?: any;\n}\n\nexport default ({\n  children,\n  elevation,\n  width,\n  height,\n  margin,\n  bgColor,\n  className,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      width: width ? width : 100,\n      height: height ? height : 100,\n      backgroundColor: bgColor,\n      marginTop: margin,\n      justifyContent: 'center',\n      margin: 'auto',\n      alignItems: 'center',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root} elevation={elevation ? elevation : 0}>\n      {' '}\n      {children}{' '}\n    </Paper>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '../atoms/Container/container';\nimport Typography from '../atoms/Typography/Typography';\nimport Image from '../atoms/Image/image';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../config/theme';\n\nexport interface TypographyProps {\n  title?: string;\n  source?: string;\n}\n\nexport default ({ title='', source }: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      width: '90%',\n      marginLeft: '5%',\n      height: 205,\n      backgroundColor: COLORS.WHITE,\n      marginBottom: 5,\n      borderStyle: 'solid',\n      borderWidth: 0.3,\n      borderColor: COLORS.TERTIARY_COLOR_LIGHT,\n    },\n    tabContainer: {\n      width: '100%',\n      height: 105,\n      flexDirection: 'column',\n    },\n    paragraph: {\n      width: '100%',\n      height: 210,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      flexDirection: 'column',\n    },\n    textCenter: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 10,\n      marginBottom: 10\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Grid justify=\"center\" xs={12}>\n          <Grid className={classes.textCenter}>\n               <Typography title>{title}</Typography>\n          </Grid>\n          <Container width=\"90%\"> \n              <Image\n               alt=\"item\"\n               source={source ? source : '/.'}\n               width={'100%'}\n               height={'150%'}\n               square\n             />\n          </Container>\n      </Grid>\n    </Paper>\n  );\n};\n\n\n/*\n\n<Grid className={classes.tabContainer} xs={12}>\n          <Container width=\"100%\" margin={20}>\n            <Grid className={classes.textCenter} xs={12}>\n              <Typography title> {title} </Typography>\n            </Grid>\n          </Container>\n          <Container>\n             <Image\n               alt=\"img\"\n               source={source ? source : '/.'}\n               width={'100%'}\n               height={'100%'}\n               square\n             />\n          </Container>\n        </Grid> */","/** @format */\n\nimport React from 'react';\nimport Header from '../molecules/header';\nimport BottonNav from '../molecules/bottom_nav';\nimport CardFull from '../molecules/card_full_width';\nimport Grid from '@material-ui/core/Grid';\nimport CardFlex from '../molecules/card_flex';\n\ninterface Props {\n  onLogout: () => void;\n  onLogIn: () => void;\n  authenticate: boolean;\n}\n\nexport default ({ onLogout, onLogIn, authenticate }: Props) => {\n  const onLogoutOrIn = () => {\n    if (authenticate) {\n      onLogout();\n      return;\n    }\n    onLogIn();\n  };\n  return (\n    <>\n      <Header\n        avatar=\"https://img.favpng.com/12/15/21/computer-icons-avatar-user-profile-recommender-system-png-favpng-HaMDUPFH1etkLCdiFjgTKHzAs.jpg\"\n        user=\"Cephas\"\n        onLogoutOrIn={onLogoutOrIn}\n        authenticate={authenticate}\n      />\n      <CardFull\n        title=\"Spring Onions\"\n        description=\"Scallions are vegetables derived from various species in the genus Allium. Scallions have a milder taste than most onions.\"\n        source=\"https://www.hellofreshuganda.com/wp-content/uploads/2020/04/spring-onionn.jpg\"\n      />\n      <Grid item container>\n        <Grid item xs={6}>\n          <CardFlex\n            title=\"Carrots\"\n            source=\"https://www.hellofreshuganda.com/wp-content/uploads/2019/06/carrots.jpg\"\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <CardFlex\n            title=\"Sweat Potato\"\n            source=\"https://www.hellofreshuganda.com/wp-content/uploads/2019/06/sweet-potatos.jpg\"\n          />\n        </Grid>\n      </Grid>\n      <CardFull\n        title=\"Colored Pepper\"\n        description=\"The bell pepper is the fruit of plants in the Grossum cultivar group of the species Capsicum annuum. \"\n        source=\"https://www.hellofreshuganda.com/wp-content/uploads/2019/06/coloured-peper.jpg\"\n      />\n      <BottonNav\n        avatar=\"https://img.favpng.com/12/15/21/computer-icons-avatar-user-profile-recommender-system-png-favpng-HaMDUPFH1etkLCdiFjgTKHzAs.jpg\"\n        user = \"Cephas\"\n        onLogoutOrIn = { onLogoutOrIn }\n        authenticate = { authenticate }\n       />\n    </>\n  );\n};\n","/** @format */\nimport React from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Loader from 'react-loader-spinner';\n\nimport { COLORS } from '../../config/theme';\n\ninterface Props {\n  visible: boolean;\n}\n\nexport default ({ visible }: Props) => {\n  const useStyles = makeStyles({\n    root: {\n      position: 'absolute',\n      top: '45%',\n      left: '44%',\n    },\n  });\n  const classes = useStyles();\n\n  if (!visible) {\n    return null;\n  }\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <Loader\n        type=\"TailSpin\"\n        color={COLORS.PRIMARY_COLOR}\n        height={50}\n        width={50}\n        visible={visible}\n      />\n    </Paper>\n  );\n};\n","/** @format */\n\nexport default {\n  APP_NAME: 'Nixon Grocery Store',\n  DESCRIPTION:\n    'Store for all your fresh Vegetables delivered directly to your Door', \n};\n","/** @format */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '../atoms/Container/container';\nimport Image from '../atoms/Image/image';\nimport Typography from '../atoms/Typography/Typography';\nimport DATA from '../config/data';\n\nexport default () => {\n  const useStyles = makeStyles({\n    container: {\n      justifyContent: 'center',\n    },\n    text: {\n      justifyContent: 'center',\n      height: 50,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Container margin={100} width=\"90%\" height={60}>\n      <Grid\n        justify=\"center\"\n        className={classes.container}\n        container\n        item\n        xs={12}\n      >\n        <Grid xs={3}>\n          <Image alt={DATA.APP_NAME} width={60} height={60} />\n        </Grid>\n        <Grid direction=\"column\" className={classes.text} xs={8}>\n          <Container width=\"100%\" height=\"100%\" margin={0}>\n            <Typography title size={21}>\n              {DATA.APP_NAME}\n            </Typography>\n          </Container>\n        </Grid>\n      </Grid>\n      <Container margin={30} width=\"90%\">\n          <Typography size={17}>\n              {DATA.DESCRIPTION}\n          </Typography>\n      </Container>\n    </Container>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  label: string;\n  id?: string;\n  type: string;\n  value?: string;\n  disabled?: boolean;\n  error?: boolean;\n  errorMessage?: string;\n  onChange: (text: string) => void;\n}\n\nexport default ({\n  label,\n  disabled,\n  value,\n  id,\n  type,\n  error,\n  errorMessage,\n  onChange,\n}: TypographyProps) => {\n  const useStyles = makeStyles({\n    root: {\n      borderColor: 'red',\n    },\n    input: {\n      backgroundColor: '#f0f6f1',\n      borderRadius: 5,\n      borderWidth: 50,\n      color: COLORS.TERTIARY_COLOR,\n      paddingLeft: 8,\n      paddingRight: 8,\n      fontSize: '14px',\n      height: 40,\n      fontWeight: 'bold',\n      width: '100%'\n    },\n    label: {\n      color: COLORS.TERTIARY_COLOR_LIGHT,\n      fontFamily: 'Red Hat Display',\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      fontSize: 11,\n      marginBottom: 5,\n    },\n    error: {\n      fontSize: 11,\n      marginTop: 2,\n      fontWeight: 'normal',\n      color: 'red',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <>\n      \n      <InputBase\n        id={id}\n        className={classes.input}\n        disabled={disabled}\n        type={type}\n        value={value}\n        inputProps={{ 'aria-label': 'naked' }}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <InputLabel className={classes.error} htmlFor={id}>\n        {error ? errorMessage : ''}\n      </InputLabel>\n    </>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { COLORS } from '../../config/theme';\n\nexport interface TypographyProps {\n  title: string;\n  block?: boolean;\n  disabled?: boolean;\n  active?: boolean;\n  onClick?: () => void;\n}\n\nexport default ({\n  title,\n  block,\n  disabled,\n  active,\n  onClick,\n}: TypographyProps) => {\n  const backgroundColor = active\n    ? COLORS.PRIMARY_COLOR\n    : !disabled\n    ? COLORS.PRIMARY_COLOR_LIGHT\n    : COLORS.WHITE_GRAY;\n  const gradientBackground = `linear-gradient(45deg, ${backgroundColor} 100%,${backgroundColor} 100%)`;\n  const useStyles = makeStyles({\n    root: {\n      background: gradientBackground,\n      borderRadius: 100,\n      border: 0,\n      color: 'white',\n      height: 40,\n      padding: '0 30px',\n    },\n    label: {\n      color: disabled ? COLORS.TERTIARY_COLOR : COLORS.WHITE,\n      textTransform: 'capitalize',\n      fontFamily: 'Red Hat Display',\n      fontWeight: 'bold',\n      fontSize: '16px',\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Button\n      onClick={onClick}\n      variant=\"text\"\n      disabled={disabled}\n      disableElevation\n      disableRipple={true}\n      fullWidth={block}\n      color=\"default\"\n      classes={{\n        root: classes.root, // class name, e.g. `classes-nesting-root-x`\n        label: classes.label, // class name, e.g. `classes-nesting-label-x`\n      }}\n      className=\"Button\"\n    >\n      {title}\n    </Button>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '../atoms/TextField/text_field';\nimport Container from '../atoms/Container/container';\nimport LoginButton from '../atoms/Button/primary_button';\nimport Typography from '../atoms/Typography/Typography';\n\nexport interface AppSectionProps {\n  onLogin?: () => void;\n  loading?: boolean;\n  password: string;\n  passwordError?: boolean;\n  passwordErrorMessage?: string;\n  email: string;\n  emailError?: boolean;\n  emailErrorMessage?: string;\n  onEmailTextChange: (text: string) => void;\n  onPasswordTextChange: (text: string) => void;\n}\n\nexport default ({\n  onLogin,\n  loading,\n  password,\n  email,\n  emailError,\n  passwordError,\n  emailErrorMessage,\n  passwordErrorMessage,\n  onEmailTextChange,\n  onPasswordTextChange,\n}: AppSectionProps) => {\n  const useStyles = makeStyles({\n    container: {\n      justifyContent: 'center',\n    },\n    text: {\n      justifyContent: 'center',\n      height: 50,\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Container margin={120} width=\"100%\" height={200}>\n      <Container width=\"90%\" margin={30} height={50}>\n        <Grid\n          justify=\"center\"\n          className={classes.container}\n          container\n          item\n          xs={12}\n        >\n          <Grid xs={3}>\n            <Container width=\"100%\" height=\"100%\" margin={'10%'}>\n              <Typography title> Email: </Typography>\n            </Container>\n          </Grid>\n          <Grid direction=\"column\" className={classes.text} xs={8}>\n            <Container width=\"100%\" height=\"100%\">\n              <Input\n                onChange={onEmailTextChange}\n                label=\"enter name\"\n                value={email}\n                type=\"email\"\n                error={emailError}\n                errorMessage={emailErrorMessage}\n              />\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n      <Container width=\"90%\" margin={50} height={50}>\n        <Grid\n          justify=\"center\"\n          className={classes.container}\n          container\n          item\n          xs={12}\n        >\n          <Grid xs={3}>\n            <Container width=\"100%\" height=\"100%\" margin={'10%'}>\n              <Typography title> Password: </Typography>\n            </Container>\n          </Grid>\n          <Grid direction=\"column\" className={classes.text} xs={8}>\n            <Container width=\"100%\" height=\"100%\">\n              <Input\n                onChange={onPasswordTextChange}\n                label=\"password\"\n                type=\"password\"\n                value={password}\n                error={passwordError}\n                errorMessage={passwordErrorMessage}\n              />\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n      <Container width=\"82%\" margin={80}>\n        <LoginButton onClick={onLogin} active={!loading} block title={loading ? \"Loading...\": \"Login\"} />\n      </Container>\n    </Container>\n  );\n};\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\nimport AppLogoSection from '../molecules/app_logo_section';\nimport LoginForm from '../molecules/login_form';\n\ninterface User {\n  email: string;\n  password: string;\n}\n\ninterface Props {\n  authenticate?: boolean;\n  loading?: boolean;\n  onLoginUser: ({ email, password }: User) => void;\n}\n\nexport default ({ onLoginUser, authenticate, loading }: Props) => {\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(false);\n\n  const onUsername = (text: string) => {\n    setError(false);\n    setPassword(text);\n  };\n\n  const onEmail = (text: string) => {\n    setError(false);\n    setEmail(text);\n  };\n\n  const onLoginUserPress = () => {\n    onLoginUser({ email, password });\n  };\n\n  useEffect(() => {\n    if (authenticate) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n  }, [authenticate]);\n\n  return (\n    <div>\n      <AppLogoSection />\n      <LoginForm\n        loading={loading}\n        password={password}\n        email={email}\n        onPasswordTextChange={onUsername}\n        onEmailTextChange={onEmail}\n        onLogin={onLoginUserPress}\n        passwordError={error}\n        passwordErrorMessage=\"Incorrect Email/Password. Try again \"\n      />\n    </div>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport Header from '../molecules/header';\n\ninterface Props {\n  onLogIn: () => void;\n}\n\nexport default ({ onLogIn }: Props) => {\n  return (\n    <>\n      <Header authenticate={false} onLogoutOrIn={onLogIn} />\n    </>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './index.css';\nimport HomePage from './pages/home';\nimport LoginPage from './pages/login';\nimport DefaultPage from './pages/default';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route path=\"*\" component={DefaultPage} />\n      </Switch>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../../config/firebase';\nimport './home.css';\nimport HomeTemplate from '../../templates/home';\nimport Loader from '../../atoms/Loader/loader';\n\nexport default () => {\n  let history = useHistory();\n  const [authenticate, setAuthenticate] = useState(false);\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      history.push('/login');\n      return;\n    }\n    setAuthenticate(true);\n  }, [history]);\n\n  const onSignOut = async () => {\n    try {\n      await auth.signOut();\n      history.push('/login');\n      localStorage.clear();\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"home\">\n      <Loader visible={!authenticate} />\n      {authenticate && (\n        <HomeTemplate authenticate={authenticate} onLogout={onSignOut} onLogIn={() => null} />\n      )}\n    </div>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../../config/firebase';\nimport LoginTemplate from '../../templates/login';\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport default () => {\n  let history = useHistory();\n  const [authenticateError, setAuthenticateError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const onLoginUser = async ({ email, password }: User) => {\n    setLoader(true);\n    try {\n      const user: any = await auth.signInWithEmailAndPassword(email, password);\n      localStorage.setItem('userId', user.uid);\n      history.push('/');\n    } catch (error) {\n      setAuthenticateError(true);\n       setLoader(false);\n    }\n  };\n\n  return (\n    <div>\n      <LoginTemplate\n        onLoginUser={onLoginUser}\n        authenticate={authenticateError}\n        loading={loader}\n      />\n    </div>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport DefaultTemplate from '../../templates/default';\n\nexport default () => {\n  let history = useHistory();\n  return (\n    <>\n      <DefaultTemplate onLogIn={() => history.push('/login')} />\n    </>\n  );\n};\n"],"sourceRoot":""}